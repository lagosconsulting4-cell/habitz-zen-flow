-- Track anonymous landing interactions and newsletter opt-ins
create table if not exists public.landing_events (
    id bigint generated by default as identity primary key,
    created_at timestamptz not null default timezone('utc', now()),
    event text not null,
    session_id uuid,
    meta jsonb,
    inserted_by uuid default auth.uid()
);

comment on table public.landing_events is 'Lightweight store for landing page metrics and CTA interactions.';
comment on column public.landing_events.session_id is 'Anonymous session identifier generated client-side.';
comment on column public.landing_events.meta is 'Optional JSON payload with contextual metadata (utm, viewport, etc).';

create index if not exists landing_events_session_id_idx on public.landing_events(session_id);
create index if not exists landing_events_event_idx on public.landing_events(event);

alter table public.landing_events enable row level security;

drop policy if exists "Allow inserts for landing events" on public.landing_events;
create policy "Allow inserts for landing events"
    on public.landing_events
    for insert
    to anon, authenticated
    with check (true);

create table if not exists public.newsletter_subscribers (
    id bigint generated by default as identity primary key,
    created_at timestamptz not null default timezone('utc', now()),
    email text not null unique,
    source text,
    meta jsonb,
    subscribed_by uuid default auth.uid()
);

comment on table public.newsletter_subscribers is 'Optional capture for landing page newsletter or waitlist forms.';
comment on column public.newsletter_subscribers.source is 'CTA or placement identifier for the opt-in.';
comment on column public.newsletter_subscribers.meta is 'Additional context captured during opt-in (utm, consent, etc).';

alter table public.newsletter_subscribers enable row level security;

drop policy if exists "Allow inserts for newsletter" on public.newsletter_subscribers;
create policy "Allow inserts for newsletter"
    on public.newsletter_subscribers
    for insert
    to anon, authenticated
    with check (true);

